import asyncio
from telethon import errors, functions, types
from .. import loader, utils

class UserManagerMod(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ –ø–µ—Ä–µ–Ω–æ—Å–∞ –∏ –∫–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (by @oqesk)"""
    strings = {"name": "UserManager (@oqesk)"}

    async def –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏cmd(self, event):
        """–î–æ–±–∞–≤–∏—Ç—å –≤—Å–µ—Ö –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Ç–∞ –≤ —Ü–µ–ª–µ–≤–æ–π (ID –∏–ª–∏ —Å—Å—ã–ª–∫–∞)"""
        args = utils.get_args_raw(event)
        if not args:
            return await event.edit("‚ùå <b>–£–∫–∞–∂–∏—Ç–µ ID —á–∞—Ç–∞ –∏–ª–∏ —Å—Å—ã–ª–∫—É!</b>")

        try:
            target_chat = await event.client.get_entity(args)
        except Exception as e:
            return await event.edit(f"‚ùå <b>–û—à–∏–±–∫–∞: {e}</b>")

        if not isinstance(target_chat, (types.Channel, types.Chat)):
            return await event.edit("‚ùå <b>–£–∫–∞–∑–∞–Ω–∞ –Ω–µ —á–∞—Ç/–∫–∞–Ω–∞–ª!</b>")

        await event.edit("üîç <b>–°–æ–±–∏—Ä–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...</b>")
        users = []
        async for user in event.client.iter_participants(event.chat_id):
            if not user.bot and not user.is_self:
                users.append(user)

        if not users:
            return await event.edit("‚ùå <b>–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –ø–µ—Ä–µ–Ω–æ—Å–∞!</b>")

        await event.edit(f"üîÑ <b>–ü–µ—Ä–µ–Ω–æ—à—É {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...</b>")
        success = 0
        failed = 0

        for user in users:
            try:
                await event.client(
                    functions.channels.InviteToChannelRequest(
                        channel=target_chat,
                        users=[user]
                    )
                )
                success += 1
                await asyncio.sleep(1)  # –ó–∞—â–∏—Ç–∞ –æ—Ç —Ñ–ª—É–¥–∞
            except errors.UserPrivacyRestrictedError:
                failed += 1  # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—Ä–µ—Ç–∏–ª –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
            except errors.UserAlreadyParticipantError:
                failed += 1  # –£–∂–µ –≤ —á–∞—Ç–µ
            except errors.FloodWaitError as e:
                await event.edit(f"‚è≥ <b>–§–ª—É–¥-–∫–æ–Ω—Ç—Ä–æ–ª—å! –ñ–¥–µ–º {e.seconds} —Å–µ–∫.</b>")
                await asyncio.sleep(e.seconds)
            except Exception as e:
                failed += 1
                await event.reply(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å {user.id}: {str(e)}")

        await event.edit(
            f"‚úÖ <b>–ì–æ—Ç–æ–≤–æ!</b>\n"
            f"‚Ä¢ –£—Å–ø–µ—à–Ω–æ: <code>{success}</code>\n"
            f"‚Ä¢ –ù–µ —É–¥–∞–ª–æ—Å—å: <code>{failed}</code>"
        )

    async def kickallcmd(self, event):
        """–ö–∏–∫–Ω—É—Ç—å –≤—Å–µ—Ö –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Ç–∞ (–∫—Ä–æ–º–µ –∞–¥–º–∏–Ω–æ–≤)"""
        if not event.is_channel and not event.is_group:
            return await event.edit("‚ùå <b>–¢–æ–ª—å–∫–æ –¥–ª—è —á–∞—Ç–æ–≤/–∫–∞–Ω–∞–ª–æ–≤!</b>")

        await event.edit("üîç <b>–°–æ–±–∏—Ä–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...</b>")
        users = []
        async for user in event.client.iter_participants(event.chat_id):
            if not user.is_self:  # –ù–µ –∫–∏–∫–∞–µ–º —Å–µ–±—è
                users.append(user)

        if not users:
            return await event.edit("‚ùå <b>–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∫–∏–∫–∞!</b>")

        await event.edit(f"üîÑ <b>–ö–∏–∫–∞—é {len(users)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...</b>")
        success = 0
        failed = 0

        for user in users:
            try:
                await event.client.kick_participant(event.chat_id, user)
                success += 1
                await asyncio.sleep(1)  # –ó–∞—â–∏—Ç–∞ –æ—Ç —Ñ–ª—É–¥–∞
            except errors.ChatAdminRequiredError:
                failed += 1  # –ù–µ—Ç –ø—Ä–∞–≤
            except errors.UserNotParticipantError:
                failed += 1  # –£–∂–µ –≤—ã—à–µ–ª
            except errors.FloodWaitError as e:
                await event.edit(f"‚è≥ <b>–§–ª—É–¥-–∫–æ–Ω—Ç—Ä–æ–ª—å! –ñ–¥–µ–º {e.seconds} —Å–µ–∫.</b>")
                await asyncio.sleep(e.seconds)
            except Exception as e:
                failed += 1
                await event.reply(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å {user.id}: {str(e)}")

        await event.edit(
            f"‚úÖ <b>–ì–æ—Ç–æ–≤–æ!</b>\n"
            f"‚Ä¢ –ö–∏–∫–Ω—É—Ç–æ: <code>{success}</code>\n"
            f"‚Ä¢ –ù–µ —É–¥–∞–ª–æ—Å—å: <code>{failed}</code>"
        )